/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ecsite;

import static ecsite.AdminLogInForm.getOracleConnection;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Image;
import java.awt.Point;
import java.awt.Rectangle;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.text.DefaultCaret;
import static javax.swing.text.DefaultCaret.ALWAYS_UPDATE;

/**
 *
 * @author razu
 */
public class CategoryUpdateForm extends javax.swing.JFrame {

    JDialog jDialog;
    
    static int INSERT_NEW_CATEGORY=1;
    static int UPDATE_CATEGORY=2;
    static int INSERT_NEW_SUB_CATEGORY=3;
    static int UPDATE_SUB_CATEGORY=4;
    
    public int TASK;
    public String ImageLink=""; 
    public String previousCategoryname;
    public String previousSubCategoryname;
            
    public CategoryUpdateForm() {
                
        initComponents();
        jDialog=new JDialog(this,rootPaneCheckingEnabled);
        jDialog.setBounds(this.getBounds());
        jDialog.setResizable(false);
        jDialog.add(CategoryUpdatePanelInsideTheFrame);
        //jDialog.setUndecorated(true);
        jDialog.show();
               
    }
    
    public CategoryUpdateForm(String categoryName, String subCategoryName, String imageLink, String description, int task)
    {
        initComponents();
        
        /*Point point=Description.getLocation();
        JScrollPane areaScrollPane = new JScrollPane(Description);
        
        areaScrollPane.setVerticalScrollBarPolicy(
        JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        areaScrollPane.setSize(Description.getSize());
        areaScrollPane.setLocation(point);
        CategoryUpdatePanelInsideTheFrame.add(areaScrollPane);*/
        CategoryName.setText(categoryName);
        SubCategoryName.setText(subCategoryName);
        Description.setText(description);
        ImageLink=imageLink;
        mSetImage(imageLink);
        TASK=task;
        
        previousCategoryname=categoryName;
        previousSubCategoryname=subCategoryName;       
        
        if(TASK==UPDATE_CATEGORY)//have to get a subcategory name (c,s)=(0,1)
        {
            SubCategoryName.setEditable(false);
            ImageUploadButton.setEnabled(false);
            
            Description.setEditable(false);           
        }
        else if(TASK==UPDATE_SUB_CATEGORY)//have to get a category and subcategory name (c,s)=(1,1)
        {
            SubCategoryName.setEditable(false);
            CategoryName.setEditable(false);
            
        }
        else if(TASK==INSERT_NEW_CATEGORY) //have not any category and subcategory name (c,s)=(0,0)
        {
            SubCategoryName.setEditable(false);
            ImageUploadButton.setEnabled(false);
            Description.setEditable(false);
            
        }
        else if(TASK==INSERT_NEW_SUB_CATEGORY)
        {
            CategoryName.setEditable(false); 
        }
        //System.out.println(categoryName+"<>"+subCategoryName+"<>"+imageLink+"<>"+description);
        
        
      
        jDialog=new JDialog(this,rootPaneCheckingEnabled);
        jDialog.setBounds(this.getBounds());
        jDialog.setResizable(false);
        jDialog.add(CategoryUpdatePanelInsideTheFrame);
        //jDialog.setUndecorated(true);
        jDialog.show();
        
        
        
        
    }
    
    public void mSetImage(String imageLinkHere)
    {
        ImageIcon ic=new ImageIcon(imageLinkHere);
        Image img = ic.getImage(); 
        Image newImg = img.getScaledInstance(90, 90,Image.SCALE_SMOOTH);
        ImageLabel.setIcon(new ImageIcon(newImg));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CategoryUpdatePanelInsideTheFrame = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        HeaderLabel = new javax.swing.JTextField();
        CategoryName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        UpdateOkButton = new javax.swing.JButton();
        UpdateCancelButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        SubCategoryName = new javax.swing.JTextField();
        ImageUploadButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        ImageLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Description = new javax.swing.JTextArea();

        setLocation(this.getLocation().x+225,this.getLocation().y+100);
        setResizable(false);

        CategoryUpdatePanelInsideTheFrame.setBackground(new java.awt.Color(0, 140, 153));
        CategoryUpdatePanelInsideTheFrame.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        CategoryUpdatePanelInsideTheFrame.setAlignmentX(0.0F);
        CategoryUpdatePanelInsideTheFrame.setAlignmentY(0.0F);
        CategoryUpdatePanelInsideTheFrame.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Category");
        jLabel1.setAutoscrolls(true);

        HeaderLabel.setEditable(false);
        HeaderLabel.setBackground(new java.awt.Color(0, 140, 153));
        HeaderLabel.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        HeaderLabel.setForeground(new java.awt.Color(240, 240, 240));
        HeaderLabel.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        HeaderLabel.setText("Product Category Update");
        HeaderLabel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        CategoryName.setBackground(new java.awt.Color(253, 253, 253));
        CategoryName.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        CategoryName.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("Details");
        jLabel2.setAutoscrolls(true);

        UpdateOkButton.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        UpdateOkButton.setText("OK");
        UpdateOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateOkButtonActionPerformed(evt);
            }
        });

        UpdateCancelButton.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        UpdateCancelButton.setText("Cancel");
        UpdateCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateCancelButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("Sub");

        SubCategoryName.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        SubCategoryName.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        ImageUploadButton.setText("Image");
        ImageUploadButton.setIconTextGap(2);
        ImageUploadButton.setMargin(new java.awt.Insets(2, 10, 2, 10));
        ImageUploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImageUploadButtonActionPerformed(evt);
            }
        });

        jPanel1.setMaximumSize(new java.awt.Dimension(90, 90));
        jPanel1.setMinimumSize(new java.awt.Dimension(90, 90));
        jPanel1.setPreferredSize(new java.awt.Dimension(90, 90));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(ImageLabel)
                .addGap(0, 90, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(ImageLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setAutoscrolls(true);

        Description.setColumns(20);
        Description.setLineWrap(true);
        Description.setRows(5);
        Description.setWrapStyleWord(true);
        jScrollPane2.setViewportView(Description);

        javax.swing.GroupLayout CategoryUpdatePanelInsideTheFrameLayout = new javax.swing.GroupLayout(CategoryUpdatePanelInsideTheFrame);
        CategoryUpdatePanelInsideTheFrame.setLayout(CategoryUpdatePanelInsideTheFrameLayout);
        CategoryUpdatePanelInsideTheFrameLayout.setHorizontalGroup(
            CategoryUpdatePanelInsideTheFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CategoryUpdatePanelInsideTheFrameLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(CategoryUpdatePanelInsideTheFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(HeaderLabel)
                    .addGroup(CategoryUpdatePanelInsideTheFrameLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(UpdateCancelButton)
                        .addGap(18, 18, 18)
                        .addComponent(UpdateOkButton))
                    .addGroup(CategoryUpdatePanelInsideTheFrameLayout.createSequentialGroup()
                        .addGroup(CategoryUpdatePanelInsideTheFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(CategoryUpdatePanelInsideTheFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CategoryUpdatePanelInsideTheFrameLayout.createSequentialGroup()
                                .addGroup(CategoryUpdatePanelInsideTheFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SubCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(CategoryUpdatePanelInsideTheFrameLayout.createSequentialGroup()
                                        .addComponent(CategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                        .addComponent(ImageUploadButton)))
                                .addGap(10, 10, 10)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2))))
                .addGap(33, 33, 33))
        );
        CategoryUpdatePanelInsideTheFrameLayout.setVerticalGroup(
            CategoryUpdatePanelInsideTheFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CategoryUpdatePanelInsideTheFrameLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(HeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(CategoryUpdatePanelInsideTheFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CategoryUpdatePanelInsideTheFrameLayout.createSequentialGroup()
                        .addGroup(CategoryUpdatePanelInsideTheFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CategoryName, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addComponent(ImageUploadButton))
                        .addGap(18, 18, 18)
                        .addGroup(CategoryUpdatePanelInsideTheFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SubCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CategoryUpdatePanelInsideTheFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CategoryUpdatePanelInsideTheFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UpdateOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpdateCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CategoryUpdatePanelInsideTheFrameLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {CategoryName, SubCategoryName});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CategoryUpdatePanelInsideTheFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CategoryUpdatePanelInsideTheFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UpdateOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateOkButtonActionPerformed
       
        String categoryName=CategoryName.getText();
        String subCategoryName = SubCategoryName.getText();
        String description=Description.getText();
        
        if(TASK==UPDATE_CATEGORY)//have to get a subcategory name (c,s)=(0,1)
        {
            SubCategoryName.setEditable(false);
            ImageUploadButton.setEnabled(false);
            Description.setEditable(false);
            if(!subCategoryName.isEmpty() && !categoryName.isEmpty() && !previousCategoryname.equals(categoryName))
            {
                try 
                {
                    InsertUpdate(subCategoryName, categoryName, ImageLink, description);
                } 
                catch (Exception ex) {
                    Logger.getLogger(CategoryUpdateForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else if(TASK==UPDATE_SUB_CATEGORY)//have to get a category and subcategory name (c,s)=(1,1)
        {
            SubCategoryName.setEditable(false);
            CategoryName.setEditable(false);
            if(!description.isEmpty() && !ImageLink.isEmpty())
            {
                try 
                {
                    InsertUpdate(subCategoryName, categoryName, ImageLink, description);
                    System.out.println(categoryName+"<>"+subCategoryName+"<>"+description+"<>"+ImageLink);
                } 
                catch (Exception ex) {
                    Logger.getLogger(CategoryUpdateForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else System.err.println("emty des or lml");
        }
        else if(TASK==INSERT_NEW_CATEGORY) //have not any category and subcategory name (c,s)=(0,0)
        {
            SubCategoryName.setEditable(false);
            ImageUploadButton.setEnabled(false);
            Description.setEditable(false);
            if(!categoryName.isEmpty())
            {
                try 
                {
                    InsertUpdate(subCategoryName, categoryName, ImageLink, description);
                } 
                catch (Exception ex) {
                    Logger.getLogger(CategoryUpdateForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else if(TASK==INSERT_NEW_SUB_CATEGORY)
        {
            CategoryName.setEditable(false);                                                 //have to a category 
            if(!subCategoryName.isEmpty() && !description.isEmpty() && !ImageLink.isEmpty()) //but no subcategory name (c,s)=(1,0)
            {
                try 
                {
                    InsertUpdate(subCategoryName, categoryName, ImageLink, description);
                } 
                catch (Exception ex) {
                    Logger.getLogger(CategoryUpdateForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
        
        
        
    }//GEN-LAST:event_UpdateOkButtonActionPerformed

    public void InsertUpdate(String subCategoryName, String categoryName, String imageLink, String description) throws SQLException, Exception
    {
        Connection c=getOracleConnection();
        CallableStatement callStmt = null;
        try 
        {
            callStmt = c.prepareCall("{call CreateUpdateCategory(?,?,?,?)}");
            callStmt.setString(1, subCategoryName);
            callStmt.setString(2, categoryName);
            callStmt.setString(3, imageLink);
            callStmt.setString(4, description);
            
            callStmt.execute();
            
            System.out.println("HI");
  
        } finally {
            callStmt.close();
            c.close();
        }
        
        this.dispose();
    }
    
    private void UpdateCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateCancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_UpdateCancelButtonActionPerformed

    private void ImageUploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImageUploadButtonActionPerformed
        
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setDialogTitle("Select the Image file....");      
        chooser.setMultiSelectionEnabled(false);
        chooser.setPreferredSize(new Dimension(650, 410));
        int result=chooser.showDialog(null, "Upload");
        
        if(result==JFileChooser.APPROVE_OPTION)
        {
            String imageLink=chooser.getSelectedFile().getPath();
            imageLink = imageLink.replace("\\", "\\\\");
            ImageLink=imageLink;
            mSetImage(imageLink);
        }
    }//GEN-LAST:event_ImageUploadButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CategoryUpdateForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CategoryUpdateForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CategoryUpdateForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CategoryUpdateForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CategoryUpdateForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CategoryName;
    private javax.swing.JPanel CategoryUpdatePanelInsideTheFrame;
    private javax.swing.JTextArea Description;
    private javax.swing.JTextField HeaderLabel;
    private javax.swing.JLabel ImageLabel;
    private javax.swing.JButton ImageUploadButton;
    private javax.swing.JTextField SubCategoryName;
    private javax.swing.JButton UpdateCancelButton;
    private javax.swing.JButton UpdateOkButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
